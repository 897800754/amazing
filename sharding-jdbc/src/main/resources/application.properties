server.port=8080
spring.application.name=sharding
## # 连接名称，若有多个主库则配置master1,master1slave1，名字可以随便起，对应起来就好
spring.shardingsphere.datasource.names=ds1,dsr1,ds2,dsr2
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbcUrl=jdbc:mysql://localhost:3306/sharding_1?tinyInt1isBit=true&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=Qq897800754.
spring.shardingsphere.datasource.dsr1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.dsr1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.dsr1.jdbcUrl=jdbc:mysql://localhost:3306/sharding_read_1?tinyInt1isBit=true&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.dsr1.username=root
spring.shardingsphere.datasource.dsr1.password=Qq897800754.
spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2.jdbcUrl=jdbc:mysql://localhost:3306/sharding_2?tinyInt1isBit=true&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=Qq897800754.
spring.shardingsphere.datasource.dsr2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.dsr2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.dsr2.jdbcUrl=jdbc:mysql://localhost:3306/sharding_read_2?tinyInt1isBit=true&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.dsr2.username=root
spring.shardingsphere.datasource.dsr2.password=Qq897800754.
##指定nju-bill表的分布情况
##分库分表模板
spring.shardingsphere.sharding.tables.test.actual-data-nodes=ds$->{1..2}.test_$->{1..2}
###主键生成策略
spring.shardingsphere.sharding.tables.test.key-generator.column=id
##自定义策略
spring.shardingsphere.sharding.tables.test.key-generator.type=UUID
#分表策略-基于表达式-inline
#分库同步~~~~~
spring.shardingsphere.sharding.tables.test.table-strategy.inline.sharding-column=type
spring.shardingsphere.sharding.tables.test.table-strategy.inline.algorithm-expression=test_$->{type % 2 +1}
##分表策略-基于标准模式-standard
#spring.shardingsphere.sharding.tables.test.table-strategy.standard.shardingColumn=type
###精确算法
#spring.shardingsphere.sharding.tables.test.table-strategy.standard.preciseAlgorithmClassName=cn.cg.shardingjdbc.MyPreciseShardingAlgorithm
###range算法
#spring.shardingsphere.sharding.tables.test.table-strategy.standard.rangeAlgorithmClassName=cn.cg.shardingjdbc.MyRangeShardingAlgorithm
##分表策略-基于Hint模式
#spring.shardingsphere.sharding.tables.test.table-strategy.hint.algorithmClassName=cn.cg.shardingjdbc.MyHintShardingAlgorithm
##分表策略-complex 组合键
#spring.shardingsphere.sharding.tables.test.table-strategy.complex.shardingColumns=type,channel
#spring.shardingsphere.sharding.tables.test.table-strategy.complex.algorithmClassName=cn.cg.shardingjdbc.MyComplexKeysShardingAlgorithm
##分库策略
spring.shardingsphere.sharding.tables.test.database-strategy.inline.sharding-column=channel
spring.shardingsphere.sharding.tables.test.database-strategy.inline.algorithm-expression=ds$->{channel % 2 +1}
##审计
# 分片审计策略配置auditor,官方文档错误!!!!!!!
#spring.shardingsphere.sharding.tables.test.audit-strategy.auditor-names=# 分片审计算法名称
#spring.shardingsphere.sharding.tables.test.audit-strategy.allow-hint-disable=# 是否禁用分片审计hint
##分库分表模板
spring.shardingsphere.sharding.tables.test_item.actual-data-nodes=ds$->{1..2}.test_item_$->{1..2}
###主键生成策略
spring.shardingsphere.sharding.tables.test_item.key-generator.column=id
##自定义策略
spring.shardingsphere.sharding.tables.test_item.key-generator.type=UUID
##分表策略-基于标准模式-standard
spring.shardingsphere.sharding.tables.test_item.table-strategy.inline.sharding-column=type
spring.shardingsphere.sharding.tables.test_item.table-strategy.inline.algorithm-expression=test_item_$->{type % 2 +1}
##分库策略
spring.shardingsphere.sharding.tables.test_item.database-strategy.inline.sharding-column=channel
spring.shardingsphere.sharding.tables.test_item.database-strategy.inline.algorithm-expression=ds$->{channel % 2 +1}
# 绑定表规则列表
spring.shardingsphere.sharding.bindingTables[0]=test,test_item
##广播表
spring.shardingsphere.sharding.broadcast-tables[0]=broad_cast_test
###读写分离
##存在问题,存在insert/update操作时会查从库 todo
spring.shardingsphere.sharding.masterSlaveRules.ds1.name=d1
spring.shardingsphere.sharding.masterSlaveRules.ds1.masterDataSourceName=ds1
spring.shardingsphere.sharding.masterSlaveRules.ds1.slaveDataSourceNames=dsr1
spring.shardingsphere.sharding.masterSlaveRules.ds2.name=d2
spring.shardingsphere.sharding.masterSlaveRules.ds2.masterDataSourceName=ds2
spring.shardingsphere.sharding.masterSlaveRules.ds2.slaveDataSourceNames=dsr2
##打开SQL输出日志
spring.shardingsphere.props.sql.show=true
#management.health.db.enabled=false
#spring.main.allow-bean-definition-overriding=true


